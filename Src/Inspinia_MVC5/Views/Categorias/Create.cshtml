@model WebCartera.Models.tcategoria

@{
    ViewBag.Title = "Crear Categoria";
}
@Styles.Render("~/Scripts/plugins/iconpicker/css/icos.css")
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Categorias</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index", "Inicio")">Inicio</a>
            </li>
            <li class="active breadcrumb-item">
                <a href="@Url.Action("Index", "Categorias")">Categorias</a>
            </li>
            <li class="active breadcrumb-item">
                <strong>Crear</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">

    </div>
</div>
<div class="wrapper wrapper-content">
    <div class="ibox ">
        <div class="ibox-content">
            <div class="row">
                <div class="col-sm-6 b-r">
                    <h3 class="m-t-none m-b">Categoria</h3>
                    <p>Agregar una nueva categoria</p>
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationMessage("ModelErr", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group picker">
                            @Html.LabelFor(model => model.Imagen, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Imagen, new { htmlAttributes = new { @class = "form-control inputpicker" } })
                                @Html.ValidationMessageFor(model => model.Imagen, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Tipo, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("Tipo", null, "-- Tipo --", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Tipo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Activo, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.Activo)
                                    @Html.ValidationMessageFor(model => model.Activo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        @Html.HiddenFor(model => model.IdUsuario)
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input class="btn btn-primary" type="submit" value="Guardar" />
                                <button class="btn btn-secondary" onclick="location.href='@Url.Action("Index", "Categorias")';return false;">Cancelar</button>
                            </div>
                        </div>
                    }
                </div>
                <div class="d-none d-sm-block col-sm-6">
                    <h4 class="text-center text-primary">Icono</h4>
                    <p class="text-center align-self-center">
                        <i id="ImgIco" class="fa fa-ban big-icon"></i>
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    @Scripts.Render("~/Scripts/plugins/iconpicker/icos.js")
}
