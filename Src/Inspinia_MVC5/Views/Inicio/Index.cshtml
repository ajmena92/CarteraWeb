@using WebCartera.Models
@model IEnumerable<WebCartera.Models.tmovimiento>
@{
    ViewBag.Title = "Reportes";
    Parametro sesion = (Parametro)Session["MiSession"];
}
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Reportes</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                @ViewBag.Rango
            </li>
            <li class="breadcrumb-item">
                <strong>@ViewBag.RangoFiltro</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">

    </div>
</div>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox ">
                <div class="ibox-title">
                    <h5>Reportes de Movimientos</h5>
                    <div class="ibox-tools">
                        <a class="collapse-link">
                            <i class="fa fa-chevron-up"></i>
                        </a>
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                            <i class="fa fa-wrench"></i>
                        </a>
                        <ul class="dropdown-menu dropdown-user">
                            @foreach (var item in sesion.Usuario.tmonedas)
                            {
                                <li class="@(item.Activo?"moneda":"d-none")">
                                    <a href="#" class="dropdown-item">@item.Descripcion</a>
                                </li>
                            }
                        </ul>
                        <a class="close-link">
                            <i class="fa fa-times"></i>
                        </a>
                    </div>
                </div>
                <div class="ibox-content">
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered table-hover dataTables-example">
                            <thead>
                                <tr>
                                    <th>
                                        Cuenta
                                    </th>
                                    <th>
                                        Categoria
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Descripcion)
                                    </th>
                                    <th>
                                        Debito
                                    </th>
                                    <th>
                                        Crédito
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Fecha)
                                    </th>    
                                    <th class="@(sesion.RangoFiltro ==0?"":"d-none")">
                                        Hora
                                    </th>
                                </tr>                                
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.tcuenta.Nombre)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.tcategoria.Nombre)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Descripcion)
                                    </td>
                                    <td>
                                        @if (item.Tipo == 2)
                                        {
                                            @Html.DisplayFor(modelItem => item.Monto)
                                        }
                                    </td>
                                    <td>
                                        @if (item.Tipo == 1)
                                        {
                                            @Html.DisplayFor(modelItem => item.Monto)
                                        }
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Fecha)
                                    </td>
                                    <td class="@(sesion.RangoFiltro ==0?"":"d-none")">
                                        @Html.DisplayFor(modelItem => item.Hora)
                                    </td>
                                </tr>
                                }                               
                            </tbody>
                            <tfoot>
                                <tr>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th class="@(sesion.RangoFiltro ==0?"":"d-none")"></th>
                                </tr>
                                </tfoot>
                        </table>
                    </div>

                </div>
            </div>
        </div>
    </div>

</div>

@section Styles {
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
}


@section Scripts {
    @Scripts.Render("~/plugins/dataTables")
    <script type="text/javascript">
        $(document).ready(function () {

            $('.dataTables-example').DataTable({
                pageLength: 25,
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [
                    { extend: 'copy' },
                    { extend: 'csv' },
                    { extend: 'excel', title: 'SmartWalletxls' },
                    { extend: 'pdf', title: 'SmartWalletpdf' },

                    {
                        extend: 'print',
                        customize: function (win) {
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');

                            $(win.document.body).find('table')
                                .addClass('compact')
                                .css('font-size', 'inherit');
                        }
                    }
                ],
                language: {
                    "decimal": "",
                    "emptyTable": "No hay información",
                    "info": "Mostrando _START_ a _END_ de _TOTAL_ Entradas",
                    "infoEmpty": "Mostrando 0 to 0 of 0 Entradas",
                    "infoFiltered": "(Filtrado de _MAX_ total entradas)",
                    "infoPostFix": "",
                    "thousands": ",",
                    "lengthMenu": "Mostrar _MENU_ Entradas",
                    "loadingRecords": "Cargando...",
                    "processing": "Procesando...",
                    "search": "Buscar:",
                    "zeroRecords": "Sin resultados encontrados",
                    "paginate": {
                        "first": "Primero",
                        "last": "Ultimo",
                        "next": "Siguiente",
                        "previous": "Anterior"
                    }
                },
                "footerCallback": function (row, data, start, end, display) {
                    var api = this.api(), data;

                    // Remove the formatting to get integer data for summation
                    var intVal = function (i) {
                        return typeof i === 'string' ?
                            i.replace(/[\$,]/g, '') * 1 :
                            typeof i === 'number' ?
                                i : 0;
                    };

                    // Total over this page
                    pageTotal = api
                        .column('.sum', { page: 'current' })
                        .data()
                        .reduce(function (a, b) {
                            return intVal(a) + intVal(b);
                        }, 0);

                    // Update footer
                    $(api.column('.sum').footer()).html(pageTotal);
                }
            });
           
        });

    </script>
}