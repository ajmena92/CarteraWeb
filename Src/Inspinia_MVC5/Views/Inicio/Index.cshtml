@using WebCartera.Models
@model IEnumerable<WebCartera.Models.tmovimiento>
@{
    ViewBag.Title = "Reportes";
    Parametro sesion = (Parametro)Session["MiSession"];
}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Reportes</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                @ViewBag.Rango
            </li>
            <li class="breadcrumb-item">
                <strong>@ViewBag.RangoFiltro</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">

    </div>
</div>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            @foreach (var moneda in ViewBag.Monedas)
            {

                <div class="ibox ">
                    <div class="ibox-title">
                        <h5>Movimientos en @moneda.Descripcion</h5>
                        <div class="ibox-tools">
                            <a class="collapse-link">
                                <i class="fa fa-chevron-up"></i>
                            </a>
                            <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                                <i class="fa fa-wrench"></i>
                            </a>
                            @*<ul class="dropdown-menu dropdown-user">
                                    @foreach (var item in sesion.Usuario.tmonedas)
                                    {
                                        <li class="@(item.Activo?"moneda":"d-none")">
                                            <a href="#" class="dropdown-item">@item.Descripcion</a>
                                        </li>
                                    }
                                </ul>*@
                            <a class="close-link">
                                <i class="fa fa-times"></i>
                            </a>
                        </div>
                    </div>
                    <div class="ibox-content">
                        <table id="t_movimientos_@moneda.Id" class="table table-striped table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th data-priority="1">
                                        Cuenta
                                    </th>
                                    <th data-priority="3">
                                        Categoria
                                    </th>
                                    <th data-priority="3">
                                        @Html.DisplayNameFor(model => model.Descripcion)
                                    </th>
                                    <th data-priority="1">
                                        Debito
                                    </th>
                                    <th data-priority="1">
                                        Crédito
                                    </th>
                                    <th data-priority="2">
                                        @Html.DisplayNameFor(model => model.Fecha)
                                    </th>
                                </tr>
                            </thead>
                            <tfoot>
                                <tr class="font-weight-bold">
                                    <td>Total @moneda.Simbolo</td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                </tr>
                            </tfoot>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    if (item.tcuenta.Id_Moneda == moneda.Id)
                                    {
                                        <tr>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.tcuenta.Nombre)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.tcategoria.Nombre)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Descripcion)
                                            </td>
                                            <td>
                                                @if (item.Tipo == 2)
                                                {@Html.DisplayFor(modelItem => item.Monto)}
                                            </td>
                                            <td>
                                                @if (item.Tipo == 1)
                                                {@Html.DisplayFor(modelItem => item.Monto)}
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Fecha)
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

        <script type="text/javascript">
            $(document).ready(function () {
                // DataTable initialisation
                $('#t_movimientos_@moneda.Id').DataTable(
                    {
                        fixedHeader: true,
                        responsive: true,
                        pageLength: 25,
                        dom: '<"html5buttons"B>lTfgitp',
                        buttons: [
                            //{ extend: 'colvis' },
                            { extend: 'copy', footer: true },
                            { extend: 'csv' },
                            { extend: 'excel', title: 'Smart Wallet Movimientos en @moneda.Descripcion' },
                            { extend: 'pdf', title: 'Smart Wallet Movimientos en @moneda.Descripcion', footer: true },

                            {
                                extend: 'print', footer: true,
                                customize: function (win) {
                                    $(win.document.body).addClass('white-bg');
                                    $(win.document.body).css('font-size', '10px');

                                    $(win.document.body).find('table')
                                        .addClass('compact')
                                        .css('font-size', 'inherit');
                                }
                            }
                        ],
                        columnDefs: [
                            { responsivePriority: 1, targets: 0 },
                            { responsivePriority: 2, targets: -1 }
                        ],
                        "footerCallback": function (row, data, start, end, display) {
                            var api = this.api(), data;
                            // Remove the formatting to get integer data for summation
                            var intVal = function (i) {
                                return typeof i === 'string' ?
                                    i.replace(/[\$,]/g, '') * 1 :
                                    typeof i === 'number' ?
                                        i : 0;
                            };

                            // Total debitos
                            total = api
                                .column(3)
                                .data()
                                .reduce(function (a, b) {
                                    return intVal(a) + intVal(b);
                                }, 0);
                            // Total Creditos
                            total = api
                                .column(4)
                                .data()
                                .reduce(function (a, b) {
                                    return intVal(a) + intVal(b);
                                }, 0);
                            // Total filtered rows on the selected column (code part added)
                            var sumDebFiltered = display.map(el => data[el][3]).reduce((a, b) => intVal(a) + intVal(b), 0);
                            var sumCrebFiltered = display.map(el => data[el][4]).reduce((a, b) => intVal(a) + intVal(b), 0);

                            // Update footer
                            $(api.column(3).footer()).html(
                                //'$' + pageTotal + ' ( $' + total + ' total) ($' + sumCol4Filtered + ' filtered)'
                                sumDebFiltered
                            );
                            $(api.column(4).footer()).html(
                                //'$' + pageTotal + ' ( $' + total + ' total) ($' + sumCol4Filtered + ' filtered)'
                                sumCrebFiltered
                            );
                        },
                        language: {
                            "decimal": ".",
                            "emptyTable": "No hay información",
                            "info": "Mostrando _START_ a _END_ de _TOTAL_ Entradas",
                            "infoEmpty": "Mostrando 0 to 0 of 0 Entradas",
                            "infoFiltered": "(Filtrado de _MAX_ total entradas)",
                            "infoPostFix": "",
                            "thousands": ",",
                            "lengthMenu": "Mostrar _MENU_ Entradas",
                            "loadingRecords": "Cargando...",
                            "processing": "Procesando...",
                            "search": "Buscar:",
                            "zeroRecords": "Sin resultados encontrados",
                            "paginate": {
                                "first": "Primero",
                                "last": "Ultimo",
                                "next": "Siguiente",
                                "previous": "Anterior"
                            }
                        }
                    }
                );
            });
                </script>
            }
        </div>
    </div>

</div>

@section Styles {
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles") 
}


@section Scripts {
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/dataTables_addings")
    <script type="text/javascript">
        Number.prototype.format = function (n, x) {
            var re = '\\d(?=(\\d{' + (x || 3) + '})+' + (n > 0 ? '\\.' : '$') + ')';
            return this.toFixed(Math.max(0, ~~n)).replace(new RegExp(re, 'g'), '$&,');
        };
    </script>
}